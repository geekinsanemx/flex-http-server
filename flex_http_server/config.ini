# FLEX HTTP/TCP Server Configuration
# ==================================
# This configuration file is preferred over environment variables.
# Lines starting with # are comments and will be ignored.
# Trailing commas in values are automatically removed.

# Network Configuration
# ---------------------
# IP address to bind servers to
# Use 127.0.0.1 for localhost only, 0.0.0.0 for all interfaces
BIND_ADDRESS=127.0.0.1

# TCP port for legacy serial protocol (format: CAPCODE|MESSAGE|FREQUENCY)
# Set to 0 to disable serial protocol
SERIAL_LISTEN_PORT=16175

# HTTP port for modern JSON API with authentication
# Set to 0 to disable HTTP API
# Note: At least one port must be enabled (non-zero)
HTTP_LISTEN_PORT=16180

# Authentication Configuration
# ---------------------------
# Path to password file for HTTP authentication (htpasswd format)
# Can be relative to current directory or absolute path
# Default: "passwords" (in current directory)
# System service default: "/var/lib/flex-server/passwords"
HTTP_AUTH_CREDENTIALS=passwords

# FLEX Hardware Configuration
# ---------------------------
# Serial device path for FLEX-FSK-TX device with AT command support
# Common paths: /dev/ttyUSB0, /dev/ttyACM0, /dev/cu.usbmodem*, /dev/cu.SLAB_USBtoUART
# Windows: COM3, COM4, etc.

# Heltec WiFi LoRa 32(V3)
# FLEX_DEVICE=/dev/ttyUSB0

# TTGO LoRa32-OLED
FLEX_DEVICE=/dev/ttyACM0

# Serial communication baudrate
# Must match the baudrate configured in flex-fsk-tx firmware
# Standard value: 115200
FLEX_BAUDRATE=115200

# TX power level (2-20)
# 2 = minimum power, 20 = maximum power
# Start with low values and increase as needed for range
# Higher values may cause interference or regulatory issues
FLEX_POWER=2

# Default Parameters
# -----------------
# Default frequency in Hz when not specified in HTTP requests
# 916.000000 MHz is a common ISM band frequency
# Adjust based on your local regulations and requirements
# Common frequencies: 433 MHz, 868 MHz, 915-928 MHz
DEFAULT_FREQUENCY=916000000

# Configuration Notes:
# ===================
#
# FLEX-FSK-TX Firmware:
# - This server requires devices with flex-fsk-tx firmware supporting AT commands
# - Firmware repository: https://github.com/geekinsanemx/flex-fsk-tx/
# - Supported devices: ESP32, Arduino, or any device with AT command interface
# - AT Commands supported: AT, AT+FREQ=<MHz>, AT+POWER=<level>, AT+SEND=<bytes>
#
# AT Command Protocol:
# - AT                 - Test device communication (responds with OK)
# - AT+FREQ=916.0000   - Set frequency in MHz
# - AT+POWER=10        - Set TX power level (2-20)
# - AT+SEND=256        - Prepare to receive 256 bytes of binary data
# - Response: +SEND: READY - Device ready for binary data
# - Binary data follows, then device responds with OK on success
#
# JSON API Required Fields:
# - capcode: REQUIRED - Target pager capcode (numeric)
# - message: REQUIRED - Message text to send
# - frequency: OPTIONAL - Uses DEFAULT_FREQUENCY if omitted
#
# Serial Device Detection:
# - Linux: Check dmesg | grep tty or ls /dev/ttyUSB* /dev/ttyACM*
# - macOS: ls /dev/cu.* | grep -E "(usbmodem|SLAB)"
# - Windows: Check Device Manager -> Ports (COM & LPT)
#
# Power Level Guidelines:
# - FLEX_POWER=2-5:  Short range, minimal interference
# - FLEX_POWER=6-10:  Medium range, indoor use
# - FLEX_POWER=11-15: Long range, outdoor use
# - FLEX_POWER=16-20: Maximum range (check regulations)
#
# Frequency Planning:
# - Check local regulations for ISM band usage
# - Common ISM frequencies:
#   * 433.050-434.790 MHz (Europe, Asia)
#   * 868.000-868.600 MHz (Europe)
#   * 902.000-928.000 MHz (Americas)
#   * 2400-2500 MHz (Global ISM band)
#
# Protocol Selection:
# - HTTP_LISTEN_PORT=0 disables JSON API (serial only)
# - SERIAL_LISTEN_PORT=0 disables TCP protocol (HTTP only)
# - Both protocols can run simultaneously
#
# Security Considerations:
# - Use BIND_ADDRESS=127.0.0.1 for local access only
# - Use BIND_ADDRESS=0.0.0.0 for network access (ensure firewall)
# - HTTP API requires authentication via HTTP_AUTH_CREDENTIALS file
# - Serial protocol has no built-in authentication
# - Store password files in secure locations with appropriate permissions
#
# Troubleshooting:
# - Use --debug flag to test without transmission
# - Use --verbose flag for comprehensive pipeline logging including AT commands
# - Check FLEX device permissions: sudo usermod -a -G dialout $USER
# - Verify AT commands work: screen /dev/ttyUSB0 115200 (test: AT, should respond OK)
# - Exit screen: Ctrl+A, K
# - Monitor with: ./flex_http_server --verbose 2>&1 | tee server.log

# Example Alternative Configurations:
# ===================================
#
# High Power Setup (check regulations):
# FLEX_POWER=18
# DEFAULT_FREQUENCY=915000000
#
# European ISM Band:
# DEFAULT_FREQUENCY=868000000
# FLEX_POWER=5
#
# Development/Testing:
# BIND_ADDRESS=127.0.0.1
# SERIAL_LISTEN_PORT=0
# HTTP_LISTEN_PORT=16180
# FLEX_POWER=2
# (HTTP only, local access, minimal power)
#
# Production Setup:
# BIND_ADDRESS=0.0.0.0
# HTTP_AUTH_CREDENTIALS=/etc/flex/passwords
# FLEX_POWER=10
# (Network accessible with secure password file location)
#
# Multiple Device Setup:
# FLEX_DEVICE=/dev/ttyUSB1
# HTTP_LISTEN_PORT=16181
# SERIAL_LISTEN_PORT=16176
# (Different device and ports for multiple instances)
#
# Arduino/ESP32 Setup:
# FLEX_DEVICE=/dev/ttyUSB0  # or /dev/ttyACM0 for Arduino
# FLEX_BAUDRATE=115200      # Match firmware configuration
# FLEX_POWER=5              # Conservative power level
#
# USB-to-Serial Adapter:
# FLEX_DEVICE=/dev/ttyUSB0              # FTDI, CP2102, CH340, etc.
# FLEX_DEVICE=/dev/cu.SLAB_USBtoUART    # macOS with CP2102
# FLEX_DEVICE=COM3                      # Windows

# Backward Compatibility:
# ======================
# The server also accepts legacy TTGO_ prefixes for configuration keys:
# TTGO_DEVICE, TTGO_BAUDRATE, TTGO_POWER
# These are automatically mapped to FLEX_ equivalents for compatibility
# with existing configurations. New installations should use FLEX_ prefixes.
